#!/bin/bash
#
# CAVS test executor
# Written and Copyright (c) by: Stephan MÃ¼ller <smueller@chronox.de>
#
# License: see LICENSE file
#
#                            NO WARRANTY
#
#    BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
#    FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
#    OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
#    PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
#    OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
#    TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
#    PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
#    REPAIR OR CORRECTION.
#
#    IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
#    WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
#    REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
#    INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
#    OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
#    TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
#    YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
#    PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGES.

. $(dirname $0)/exec_lib.sh

MODULE_PREFIX="leancrypto__"
MODULE_POSTFIX="_"

EXEC="C"

if [ $(uname -m) = "aarch64" -o $(uname -m) = "arm64" ]; then
	EXEC="$EXEC
	      ARM_CE ARM_ASM ARM_2X"
elif [ $(uname -m) = "riscv64" ]; then
	EXEC="$EXEC
	      RISCV64 RISCV64_ZBB RISCV64_RVV"
elif (uname -m | grep -q armv7 ); then
	EXEC="$EXEC
	      ARM_NEON"
elif [ $(uname -m) = "x86_64" ]; then
	EXEC="$EXEC
	      AVX2 AVX512 AVX2_4X AESNI"
fi

CIPHER_CALL_C="LC_AES=\"C\" LC_SHA3=\"C\" LC_DILITHIUM=\"C\" LC_KYBER=\"C\""
CIPHER_CALL_AVX2="LC_SHA3=\"AVX2\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_AVX512="LC_SHA3=\"AVX512\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_AESNI="LC_SHA3=\"AESNI\" LC_AES=\"AESNI\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_ARM_NEON="LC_SHA3=\"ARM_NEON\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_ARM_CE="LC_AES=\"ARM_CE\" LC_SHA3=\"ARM_CE\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_ARM_ASM="LC_AES=\"ARM_ASM\" LC_SHA3=\"ARM_ASM\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_AVX2_4X="LC_SHAKE=\"AVX2-4X\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_ARM_2X="LC_SHAKE=\"ARM-2X\" LC_DILITHIUM=\"common\" LC_KYBER=\"common\""
CIPHER_CALL_RISCV64="LC_AES=\"RISCV64\" LC_SHA3=\"RISCV64\" LC_DILITHIUM=\"riscv64_asm\" LC_KYBER=\"riscv64_asm\""
CIPHER_CALL_RISCV64_ZBB="LC_SHA3=\"RISCV64_ZBB\""
CIPHER_CALL_RISCV64_RVV="LC_DILITHIUM=\"riscv64_rvv\" LC_KYBER=\"riscv64_rvv\""

do_test() {
	PATH=.:$PATH

	for exec in $EXEC; do

		eval CIPHER_CALL=\$CIPHER_CALL_$exec

		local modulename="${MODULE_PREFIX}${exec}${MODULE_POSTFIX}"
		eval "$CIPHER_CALL exec_module ${modulename}"
	done
}

build_tool "leancrypto"
do_test

########################################################

exit $failures
