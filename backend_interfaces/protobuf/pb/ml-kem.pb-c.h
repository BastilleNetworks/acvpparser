/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backend_interfaces/protobuf/pb/ml-kem.proto */

#ifndef PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2dkem_2eproto__INCLUDED
#define PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2dkem_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct MlKemKeygenDataMsg MlKemKeygenDataMsg;
typedef struct MlKemEncapDataMsg MlKemEncapDataMsg;
typedef struct MlKemDecapDataMsg MlKemDecapDataMsg;


/* --- enums --- */


/* --- messages --- */

struct  MlKemKeygenDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData d;
  ProtobufCBinaryData z;
  ProtobufCBinaryData ek;
  ProtobufCBinaryData dk;
  uint64_t cipher;
};
#define ML_KEM_KEYGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_kem_keygen_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  MlKemEncapDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData ek;
  ProtobufCBinaryData c;
  ProtobufCBinaryData ss;
  uint64_t cipher;
};
#define ML_KEM_ENCAP_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_kem_encap_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  MlKemDecapDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData c;
  ProtobufCBinaryData dk;
  ProtobufCBinaryData ss;
  uint64_t cipher;
};
#define ML_KEM_DECAP_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_kem_decap_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


/* MlKemKeygenDataMsg methods */
void   ml_kem_keygen_data_msg__init
                     (MlKemKeygenDataMsg         *message);
size_t ml_kem_keygen_data_msg__get_packed_size
                     (const MlKemKeygenDataMsg   *message);
size_t ml_kem_keygen_data_msg__pack
                     (const MlKemKeygenDataMsg   *message,
                      uint8_t             *out);
size_t ml_kem_keygen_data_msg__pack_to_buffer
                     (const MlKemKeygenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlKemKeygenDataMsg *
       ml_kem_keygen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_kem_keygen_data_msg__free_unpacked
                     (MlKemKeygenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* MlKemEncapDataMsg methods */
void   ml_kem_encap_data_msg__init
                     (MlKemEncapDataMsg         *message);
size_t ml_kem_encap_data_msg__get_packed_size
                     (const MlKemEncapDataMsg   *message);
size_t ml_kem_encap_data_msg__pack
                     (const MlKemEncapDataMsg   *message,
                      uint8_t             *out);
size_t ml_kem_encap_data_msg__pack_to_buffer
                     (const MlKemEncapDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlKemEncapDataMsg *
       ml_kem_encap_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_kem_encap_data_msg__free_unpacked
                     (MlKemEncapDataMsg *message,
                      ProtobufCAllocator *allocator);
/* MlKemDecapDataMsg methods */
void   ml_kem_decap_data_msg__init
                     (MlKemDecapDataMsg         *message);
size_t ml_kem_decap_data_msg__get_packed_size
                     (const MlKemDecapDataMsg   *message);
size_t ml_kem_decap_data_msg__pack
                     (const MlKemDecapDataMsg   *message,
                      uint8_t             *out);
size_t ml_kem_decap_data_msg__pack_to_buffer
                     (const MlKemDecapDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlKemDecapDataMsg *
       ml_kem_decap_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_kem_decap_data_msg__free_unpacked
                     (MlKemDecapDataMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MlKemKeygenDataMsg_Closure)
                 (const MlKemKeygenDataMsg *message,
                  void *closure_data);
typedef void (*MlKemEncapDataMsg_Closure)
                 (const MlKemEncapDataMsg *message,
                  void *closure_data);
typedef void (*MlKemDecapDataMsg_Closure)
                 (const MlKemDecapDataMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ml_kem_keygen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_kem_encap_data_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_kem_decap_data_msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2dkem_2eproto__INCLUDED */
