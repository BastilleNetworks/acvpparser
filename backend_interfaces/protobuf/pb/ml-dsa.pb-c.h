/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backend_interfaces/protobuf/pb/ml-dsa.proto */

#ifndef PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2ddsa_2eproto__INCLUDED
#define PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2ddsa_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct MlDsaKeygenDataMsg MlDsaKeygenDataMsg;
typedef struct MlDsaSiggenDataMsg MlDsaSiggenDataMsg;
typedef struct MlDsaSigverDataMsg MlDsaSigverDataMsg;
typedef struct MlDsaKeygenEnMsg MlDsaKeygenEnMsg;
typedef struct MlDsaFreeKeyMsg MlDsaFreeKeyMsg;


/* --- enums --- */


/* --- messages --- */

struct  MlDsaKeygenDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData seed;
  ProtobufCBinaryData pk;
  ProtobufCBinaryData sk;
  uint64_t cipher;
};
#define ML_DSA_KEYGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_dsa_keygen_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  MlDsaSiggenDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData mu;
  ProtobufCBinaryData sig;
  ProtobufCBinaryData pk;
  ProtobufCBinaryData rnd;
  ProtobufCBinaryData sk;
  ProtobufCBinaryData context;
  ProtobufCBinaryData interface;
  uint32_t privkey;
  uint64_t cipher;
  uint64_t hashalg;
};
#define ML_DSA_SIGGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_dsa_siggen_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0 }


struct  MlDsaSigverDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData sig;
  ProtobufCBinaryData pk;
  ProtobufCBinaryData context;
  ProtobufCBinaryData interface;
  uint64_t cipher;
  uint64_t hashalg;
  uint32_t sigver_success;
};
#define ML_DSA_SIGVER_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_dsa_sigver_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0 }


struct  MlDsaKeygenEnMsg
{
  ProtobufCMessage base;
  uint64_t cipher;
  ProtobufCBinaryData pk;
  uint32_t privkey;
};
#define ML_DSA_KEYGEN_EN_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_dsa_keygen_en_msg__descriptor) \
, 0, {0,NULL}, 0 }


struct  MlDsaFreeKeyMsg
{
  ProtobufCMessage base;
  uint32_t privkey;
};
#define ML_DSA_FREE_KEY_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ml_dsa_free_key_msg__descriptor) \
, 0 }


/* MlDsaKeygenDataMsg methods */
void   ml_dsa_keygen_data_msg__init
                     (MlDsaKeygenDataMsg         *message);
size_t ml_dsa_keygen_data_msg__get_packed_size
                     (const MlDsaKeygenDataMsg   *message);
size_t ml_dsa_keygen_data_msg__pack
                     (const MlDsaKeygenDataMsg   *message,
                      uint8_t             *out);
size_t ml_dsa_keygen_data_msg__pack_to_buffer
                     (const MlDsaKeygenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlDsaKeygenDataMsg *
       ml_dsa_keygen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_dsa_keygen_data_msg__free_unpacked
                     (MlDsaKeygenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* MlDsaSiggenDataMsg methods */
void   ml_dsa_siggen_data_msg__init
                     (MlDsaSiggenDataMsg         *message);
size_t ml_dsa_siggen_data_msg__get_packed_size
                     (const MlDsaSiggenDataMsg   *message);
size_t ml_dsa_siggen_data_msg__pack
                     (const MlDsaSiggenDataMsg   *message,
                      uint8_t             *out);
size_t ml_dsa_siggen_data_msg__pack_to_buffer
                     (const MlDsaSiggenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlDsaSiggenDataMsg *
       ml_dsa_siggen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_dsa_siggen_data_msg__free_unpacked
                     (MlDsaSiggenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* MlDsaSigverDataMsg methods */
void   ml_dsa_sigver_data_msg__init
                     (MlDsaSigverDataMsg         *message);
size_t ml_dsa_sigver_data_msg__get_packed_size
                     (const MlDsaSigverDataMsg   *message);
size_t ml_dsa_sigver_data_msg__pack
                     (const MlDsaSigverDataMsg   *message,
                      uint8_t             *out);
size_t ml_dsa_sigver_data_msg__pack_to_buffer
                     (const MlDsaSigverDataMsg   *message,
                      ProtobufCBuffer     *buffer);
MlDsaSigverDataMsg *
       ml_dsa_sigver_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_dsa_sigver_data_msg__free_unpacked
                     (MlDsaSigverDataMsg *message,
                      ProtobufCAllocator *allocator);
/* MlDsaKeygenEnMsg methods */
void   ml_dsa_keygen_en_msg__init
                     (MlDsaKeygenEnMsg         *message);
size_t ml_dsa_keygen_en_msg__get_packed_size
                     (const MlDsaKeygenEnMsg   *message);
size_t ml_dsa_keygen_en_msg__pack
                     (const MlDsaKeygenEnMsg   *message,
                      uint8_t             *out);
size_t ml_dsa_keygen_en_msg__pack_to_buffer
                     (const MlDsaKeygenEnMsg   *message,
                      ProtobufCBuffer     *buffer);
MlDsaKeygenEnMsg *
       ml_dsa_keygen_en_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_dsa_keygen_en_msg__free_unpacked
                     (MlDsaKeygenEnMsg *message,
                      ProtobufCAllocator *allocator);
/* MlDsaFreeKeyMsg methods */
void   ml_dsa_free_key_msg__init
                     (MlDsaFreeKeyMsg         *message);
size_t ml_dsa_free_key_msg__get_packed_size
                     (const MlDsaFreeKeyMsg   *message);
size_t ml_dsa_free_key_msg__pack
                     (const MlDsaFreeKeyMsg   *message,
                      uint8_t             *out);
size_t ml_dsa_free_key_msg__pack_to_buffer
                     (const MlDsaFreeKeyMsg   *message,
                      ProtobufCBuffer     *buffer);
MlDsaFreeKeyMsg *
       ml_dsa_free_key_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ml_dsa_free_key_msg__free_unpacked
                     (MlDsaFreeKeyMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*MlDsaKeygenDataMsg_Closure)
                 (const MlDsaKeygenDataMsg *message,
                  void *closure_data);
typedef void (*MlDsaSiggenDataMsg_Closure)
                 (const MlDsaSiggenDataMsg *message,
                  void *closure_data);
typedef void (*MlDsaSigverDataMsg_Closure)
                 (const MlDsaSigverDataMsg *message,
                  void *closure_data);
typedef void (*MlDsaKeygenEnMsg_Closure)
                 (const MlDsaKeygenEnMsg *message,
                  void *closure_data);
typedef void (*MlDsaFreeKeyMsg_Closure)
                 (const MlDsaFreeKeyMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor ml_dsa_keygen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_dsa_siggen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_dsa_sigver_data_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_dsa_keygen_en_msg__descriptor;
extern const ProtobufCMessageDescriptor ml_dsa_free_key_msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2fml_2ddsa_2eproto__INCLUDED */
