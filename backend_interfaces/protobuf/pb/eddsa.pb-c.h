/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backend_interfaces/protobuf/pb/eddsa.proto */

#ifndef PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2feddsa_2eproto__INCLUDED
#define PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2feddsa_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct EddsaKeygenDataMsg EddsaKeygenDataMsg;
typedef struct EddsaKeyverDataMsg EddsaKeyverDataMsg;
typedef struct EddsaSiggenDataMsg EddsaSiggenDataMsg;
typedef struct EddsaSigverDataMsg EddsaSigverDataMsg;
typedef struct EddsaKeygenEnMsg EddsaKeygenEnMsg;
typedef struct EddsaFreeKeyMsg EddsaFreeKeyMsg;


/* --- enums --- */


/* --- messages --- */

struct  EddsaKeygenDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData d;
  ProtobufCBinaryData q;
  uint64_t cipher;
};
#define EDDSA_KEYGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_keygen_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, 0 }


struct  EddsaKeyverDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData q;
  uint64_t cipher;
  uint32_t keyver_success;
};
#define EDDSA_KEYVER_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_keyver_data_msg__descriptor) \
, {0,NULL}, 0, 0 }


struct  EddsaSiggenDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData context;
  ProtobufCBinaryData q;
  ProtobufCBinaryData signature;
  uint64_t cipher;
  uint32_t prehash;
  uint32_t privkey;
};
#define EDDSA_SIGGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_siggen_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0 }


struct  EddsaSigverDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData q;
  ProtobufCBinaryData signature;
  uint64_t cipher;
  uint32_t prehash;
  uint32_t sigver_success;
};
#define EDDSA_SIGVER_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_sigver_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0 }


struct  EddsaKeygenEnMsg
{
  ProtobufCMessage base;
  uint64_t curve;
  ProtobufCBinaryData qbuf;
  uint32_t privkey;
};
#define EDDSA_KEYGEN_EN_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_keygen_en_msg__descriptor) \
, 0, {0,NULL}, 0 }


struct  EddsaFreeKeyMsg
{
  ProtobufCMessage base;
  uint32_t privkey;
};
#define EDDSA_FREE_KEY_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&eddsa_free_key_msg__descriptor) \
, 0 }


/* EddsaKeygenDataMsg methods */
void   eddsa_keygen_data_msg__init
                     (EddsaKeygenDataMsg         *message);
size_t eddsa_keygen_data_msg__get_packed_size
                     (const EddsaKeygenDataMsg   *message);
size_t eddsa_keygen_data_msg__pack
                     (const EddsaKeygenDataMsg   *message,
                      uint8_t             *out);
size_t eddsa_keygen_data_msg__pack_to_buffer
                     (const EddsaKeygenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaKeygenDataMsg *
       eddsa_keygen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_keygen_data_msg__free_unpacked
                     (EddsaKeygenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* EddsaKeyverDataMsg methods */
void   eddsa_keyver_data_msg__init
                     (EddsaKeyverDataMsg         *message);
size_t eddsa_keyver_data_msg__get_packed_size
                     (const EddsaKeyverDataMsg   *message);
size_t eddsa_keyver_data_msg__pack
                     (const EddsaKeyverDataMsg   *message,
                      uint8_t             *out);
size_t eddsa_keyver_data_msg__pack_to_buffer
                     (const EddsaKeyverDataMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaKeyverDataMsg *
       eddsa_keyver_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_keyver_data_msg__free_unpacked
                     (EddsaKeyverDataMsg *message,
                      ProtobufCAllocator *allocator);
/* EddsaSiggenDataMsg methods */
void   eddsa_siggen_data_msg__init
                     (EddsaSiggenDataMsg         *message);
size_t eddsa_siggen_data_msg__get_packed_size
                     (const EddsaSiggenDataMsg   *message);
size_t eddsa_siggen_data_msg__pack
                     (const EddsaSiggenDataMsg   *message,
                      uint8_t             *out);
size_t eddsa_siggen_data_msg__pack_to_buffer
                     (const EddsaSiggenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaSiggenDataMsg *
       eddsa_siggen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_siggen_data_msg__free_unpacked
                     (EddsaSiggenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* EddsaSigverDataMsg methods */
void   eddsa_sigver_data_msg__init
                     (EddsaSigverDataMsg         *message);
size_t eddsa_sigver_data_msg__get_packed_size
                     (const EddsaSigverDataMsg   *message);
size_t eddsa_sigver_data_msg__pack
                     (const EddsaSigverDataMsg   *message,
                      uint8_t             *out);
size_t eddsa_sigver_data_msg__pack_to_buffer
                     (const EddsaSigverDataMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaSigverDataMsg *
       eddsa_sigver_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_sigver_data_msg__free_unpacked
                     (EddsaSigverDataMsg *message,
                      ProtobufCAllocator *allocator);
/* EddsaKeygenEnMsg methods */
void   eddsa_keygen_en_msg__init
                     (EddsaKeygenEnMsg         *message);
size_t eddsa_keygen_en_msg__get_packed_size
                     (const EddsaKeygenEnMsg   *message);
size_t eddsa_keygen_en_msg__pack
                     (const EddsaKeygenEnMsg   *message,
                      uint8_t             *out);
size_t eddsa_keygen_en_msg__pack_to_buffer
                     (const EddsaKeygenEnMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaKeygenEnMsg *
       eddsa_keygen_en_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_keygen_en_msg__free_unpacked
                     (EddsaKeygenEnMsg *message,
                      ProtobufCAllocator *allocator);
/* EddsaFreeKeyMsg methods */
void   eddsa_free_key_msg__init
                     (EddsaFreeKeyMsg         *message);
size_t eddsa_free_key_msg__get_packed_size
                     (const EddsaFreeKeyMsg   *message);
size_t eddsa_free_key_msg__pack
                     (const EddsaFreeKeyMsg   *message,
                      uint8_t             *out);
size_t eddsa_free_key_msg__pack_to_buffer
                     (const EddsaFreeKeyMsg   *message,
                      ProtobufCBuffer     *buffer);
EddsaFreeKeyMsg *
       eddsa_free_key_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   eddsa_free_key_msg__free_unpacked
                     (EddsaFreeKeyMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*EddsaKeygenDataMsg_Closure)
                 (const EddsaKeygenDataMsg *message,
                  void *closure_data);
typedef void (*EddsaKeyverDataMsg_Closure)
                 (const EddsaKeyverDataMsg *message,
                  void *closure_data);
typedef void (*EddsaSiggenDataMsg_Closure)
                 (const EddsaSiggenDataMsg *message,
                  void *closure_data);
typedef void (*EddsaSigverDataMsg_Closure)
                 (const EddsaSigverDataMsg *message,
                  void *closure_data);
typedef void (*EddsaKeygenEnMsg_Closure)
                 (const EddsaKeygenEnMsg *message,
                  void *closure_data);
typedef void (*EddsaFreeKeyMsg_Closure)
                 (const EddsaFreeKeyMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor eddsa_keygen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor eddsa_keyver_data_msg__descriptor;
extern const ProtobufCMessageDescriptor eddsa_siggen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor eddsa_sigver_data_msg__descriptor;
extern const ProtobufCMessageDescriptor eddsa_keygen_en_msg__descriptor;
extern const ProtobufCMessageDescriptor eddsa_free_key_msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2feddsa_2eproto__INCLUDED */
