/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: backend_interfaces/protobuf/pb/rsa.proto */

#ifndef PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2frsa_2eproto__INCLUDED
#define PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2frsa_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct RsaKeygenPrimeDataMsg RsaKeygenPrimeDataMsg;
typedef struct RsaKeygenDataMsg RsaKeygenDataMsg;
typedef struct RsaKeygenProvPrimeDataMsg RsaKeygenProvPrimeDataMsg;
typedef struct RsaSiggenDataMsg RsaSiggenDataMsg;
typedef struct RsaSigverDataMsg RsaSigverDataMsg;
typedef struct RsaSignaturePrimitiveDataMsg RsaSignaturePrimitiveDataMsg;
typedef struct RsaDecryptionPrimitiveDataMsg RsaDecryptionPrimitiveDataMsg;
typedef struct RsaKeygenEnMsg RsaKeygenEnMsg;
typedef struct RsaFreeKeyMsg RsaFreeKeyMsg;


/* --- enums --- */


/* --- messages --- */

struct  RsaKeygenPrimeDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  ProtobufCBinaryData p;
  ProtobufCBinaryData q;
  ProtobufCBinaryData e;
  uint32_t keygen_success;
};
#define RSA_KEYGEN_PRIME_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_keygen_prime_data_msg__descriptor) \
, 0, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  RsaKeygenDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  ProtobufCBinaryData n;
  ProtobufCBinaryData d;
  ProtobufCBinaryData p;
  ProtobufCBinaryData q;
  ProtobufCBinaryData e;
  ProtobufCBinaryData xp;
  ProtobufCBinaryData xp1;
  ProtobufCBinaryData xp2;
  ProtobufCBinaryData xq;
  ProtobufCBinaryData xq1;
  ProtobufCBinaryData xq2;
  uint32_t bitlen_in;
  uint32_t bitlen1;
  uint32_t bitlen2;
  uint32_t bitlen3;
  uint32_t bitlen4;
  ProtobufCBinaryData dmp1;
  ProtobufCBinaryData dmq1;
  ProtobufCBinaryData iqmp;
};
#define RSA_KEYGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_keygen_data_msg__descriptor) \
, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL} }


struct  RsaKeygenProvPrimeDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  ProtobufCBinaryData n;
  ProtobufCBinaryData d;
  ProtobufCBinaryData p;
  ProtobufCBinaryData q;
  ProtobufCBinaryData seed;
  ProtobufCBinaryData e;
  uint64_t cipher;
};
#define RSA_KEYGEN_PROV_PRIME_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_keygen_prov_prime_data_msg__descriptor) \
, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  RsaSiggenDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  uint64_t cipher;
  uint32_t saltlen;
  ProtobufCBinaryData e;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData sig;
  ProtobufCBinaryData n;
  uint32_t privkey;
};
#define RSA_SIGGEN_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_siggen_data_msg__descriptor) \
, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  RsaSigverDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  uint64_t cipher;
  uint32_t saltlen;
  ProtobufCBinaryData n;
  ProtobufCBinaryData e;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData sig;
  uint32_t sig_result;
};
#define RSA_SIGVER_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_sigver_data_msg__descriptor) \
, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  RsaSignaturePrimitiveDataMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData n;
  ProtobufCBinaryData e;
  ProtobufCBinaryData d;
  ProtobufCBinaryData p;
  ProtobufCBinaryData q;
  ProtobufCBinaryData dmp1;
  ProtobufCBinaryData dmq1;
  ProtobufCBinaryData iqmp;
  ProtobufCBinaryData signature;
  uint32_t sig_result;
};
#define RSA_SIGNATURE_PRIMITIVE_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_signature_primitive_data_msg__descriptor) \
, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  RsaDecryptionPrimitiveDataMsg
{
  ProtobufCMessage base;
  uint32_t modulus;
  uint32_t num;
  uint32_t num_failures;
  ProtobufCBinaryData msg;
  ProtobufCBinaryData n;
  ProtobufCBinaryData e;
  ProtobufCBinaryData d;
  ProtobufCBinaryData p;
  ProtobufCBinaryData q;
  ProtobufCBinaryData dmp1;
  ProtobufCBinaryData dmq1;
  ProtobufCBinaryData iqmp;
  ProtobufCBinaryData s;
  uint32_t dec_result;
  uint32_t privkey;
};
#define RSA_DECRYPTION_PRIMITIVE_DATA_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_decryption_primitive_data_msg__descriptor) \
, 0, 0, 0, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0, 0 }


struct  RsaKeygenEnMsg
{
  ProtobufCMessage base;
  ProtobufCBinaryData ebuf;
  uint32_t modulus;
  uint32_t privkey;
  ProtobufCBinaryData nbuf;
};
#define RSA_KEYGEN_EN_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_keygen_en_msg__descriptor) \
, {0,NULL}, 0, 0, {0,NULL} }


struct  RsaFreeKeyMsg
{
  ProtobufCMessage base;
  uint32_t privkey;
};
#define RSA_FREE_KEY_MSG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rsa_free_key_msg__descriptor) \
, 0 }


/* RsaKeygenPrimeDataMsg methods */
void   rsa_keygen_prime_data_msg__init
                     (RsaKeygenPrimeDataMsg         *message);
size_t rsa_keygen_prime_data_msg__get_packed_size
                     (const RsaKeygenPrimeDataMsg   *message);
size_t rsa_keygen_prime_data_msg__pack
                     (const RsaKeygenPrimeDataMsg   *message,
                      uint8_t             *out);
size_t rsa_keygen_prime_data_msg__pack_to_buffer
                     (const RsaKeygenPrimeDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaKeygenPrimeDataMsg *
       rsa_keygen_prime_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_keygen_prime_data_msg__free_unpacked
                     (RsaKeygenPrimeDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaKeygenDataMsg methods */
void   rsa_keygen_data_msg__init
                     (RsaKeygenDataMsg         *message);
size_t rsa_keygen_data_msg__get_packed_size
                     (const RsaKeygenDataMsg   *message);
size_t rsa_keygen_data_msg__pack
                     (const RsaKeygenDataMsg   *message,
                      uint8_t             *out);
size_t rsa_keygen_data_msg__pack_to_buffer
                     (const RsaKeygenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaKeygenDataMsg *
       rsa_keygen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_keygen_data_msg__free_unpacked
                     (RsaKeygenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaKeygenProvPrimeDataMsg methods */
void   rsa_keygen_prov_prime_data_msg__init
                     (RsaKeygenProvPrimeDataMsg         *message);
size_t rsa_keygen_prov_prime_data_msg__get_packed_size
                     (const RsaKeygenProvPrimeDataMsg   *message);
size_t rsa_keygen_prov_prime_data_msg__pack
                     (const RsaKeygenProvPrimeDataMsg   *message,
                      uint8_t             *out);
size_t rsa_keygen_prov_prime_data_msg__pack_to_buffer
                     (const RsaKeygenProvPrimeDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaKeygenProvPrimeDataMsg *
       rsa_keygen_prov_prime_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_keygen_prov_prime_data_msg__free_unpacked
                     (RsaKeygenProvPrimeDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaSiggenDataMsg methods */
void   rsa_siggen_data_msg__init
                     (RsaSiggenDataMsg         *message);
size_t rsa_siggen_data_msg__get_packed_size
                     (const RsaSiggenDataMsg   *message);
size_t rsa_siggen_data_msg__pack
                     (const RsaSiggenDataMsg   *message,
                      uint8_t             *out);
size_t rsa_siggen_data_msg__pack_to_buffer
                     (const RsaSiggenDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaSiggenDataMsg *
       rsa_siggen_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_siggen_data_msg__free_unpacked
                     (RsaSiggenDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaSigverDataMsg methods */
void   rsa_sigver_data_msg__init
                     (RsaSigverDataMsg         *message);
size_t rsa_sigver_data_msg__get_packed_size
                     (const RsaSigverDataMsg   *message);
size_t rsa_sigver_data_msg__pack
                     (const RsaSigverDataMsg   *message,
                      uint8_t             *out);
size_t rsa_sigver_data_msg__pack_to_buffer
                     (const RsaSigverDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaSigverDataMsg *
       rsa_sigver_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_sigver_data_msg__free_unpacked
                     (RsaSigverDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaSignaturePrimitiveDataMsg methods */
void   rsa_signature_primitive_data_msg__init
                     (RsaSignaturePrimitiveDataMsg         *message);
size_t rsa_signature_primitive_data_msg__get_packed_size
                     (const RsaSignaturePrimitiveDataMsg   *message);
size_t rsa_signature_primitive_data_msg__pack
                     (const RsaSignaturePrimitiveDataMsg   *message,
                      uint8_t             *out);
size_t rsa_signature_primitive_data_msg__pack_to_buffer
                     (const RsaSignaturePrimitiveDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaSignaturePrimitiveDataMsg *
       rsa_signature_primitive_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_signature_primitive_data_msg__free_unpacked
                     (RsaSignaturePrimitiveDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaDecryptionPrimitiveDataMsg methods */
void   rsa_decryption_primitive_data_msg__init
                     (RsaDecryptionPrimitiveDataMsg         *message);
size_t rsa_decryption_primitive_data_msg__get_packed_size
                     (const RsaDecryptionPrimitiveDataMsg   *message);
size_t rsa_decryption_primitive_data_msg__pack
                     (const RsaDecryptionPrimitiveDataMsg   *message,
                      uint8_t             *out);
size_t rsa_decryption_primitive_data_msg__pack_to_buffer
                     (const RsaDecryptionPrimitiveDataMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaDecryptionPrimitiveDataMsg *
       rsa_decryption_primitive_data_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_decryption_primitive_data_msg__free_unpacked
                     (RsaDecryptionPrimitiveDataMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaKeygenEnMsg methods */
void   rsa_keygen_en_msg__init
                     (RsaKeygenEnMsg         *message);
size_t rsa_keygen_en_msg__get_packed_size
                     (const RsaKeygenEnMsg   *message);
size_t rsa_keygen_en_msg__pack
                     (const RsaKeygenEnMsg   *message,
                      uint8_t             *out);
size_t rsa_keygen_en_msg__pack_to_buffer
                     (const RsaKeygenEnMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaKeygenEnMsg *
       rsa_keygen_en_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_keygen_en_msg__free_unpacked
                     (RsaKeygenEnMsg *message,
                      ProtobufCAllocator *allocator);
/* RsaFreeKeyMsg methods */
void   rsa_free_key_msg__init
                     (RsaFreeKeyMsg         *message);
size_t rsa_free_key_msg__get_packed_size
                     (const RsaFreeKeyMsg   *message);
size_t rsa_free_key_msg__pack
                     (const RsaFreeKeyMsg   *message,
                      uint8_t             *out);
size_t rsa_free_key_msg__pack_to_buffer
                     (const RsaFreeKeyMsg   *message,
                      ProtobufCBuffer     *buffer);
RsaFreeKeyMsg *
       rsa_free_key_msg__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rsa_free_key_msg__free_unpacked
                     (RsaFreeKeyMsg *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RsaKeygenPrimeDataMsg_Closure)
                 (const RsaKeygenPrimeDataMsg *message,
                  void *closure_data);
typedef void (*RsaKeygenDataMsg_Closure)
                 (const RsaKeygenDataMsg *message,
                  void *closure_data);
typedef void (*RsaKeygenProvPrimeDataMsg_Closure)
                 (const RsaKeygenProvPrimeDataMsg *message,
                  void *closure_data);
typedef void (*RsaSiggenDataMsg_Closure)
                 (const RsaSiggenDataMsg *message,
                  void *closure_data);
typedef void (*RsaSigverDataMsg_Closure)
                 (const RsaSigverDataMsg *message,
                  void *closure_data);
typedef void (*RsaSignaturePrimitiveDataMsg_Closure)
                 (const RsaSignaturePrimitiveDataMsg *message,
                  void *closure_data);
typedef void (*RsaDecryptionPrimitiveDataMsg_Closure)
                 (const RsaDecryptionPrimitiveDataMsg *message,
                  void *closure_data);
typedef void (*RsaKeygenEnMsg_Closure)
                 (const RsaKeygenEnMsg *message,
                  void *closure_data);
typedef void (*RsaFreeKeyMsg_Closure)
                 (const RsaFreeKeyMsg *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rsa_keygen_prime_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_keygen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_keygen_prov_prime_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_siggen_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_sigver_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_signature_primitive_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_decryption_primitive_data_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_keygen_en_msg__descriptor;
extern const ProtobufCMessageDescriptor rsa_free_key_msg__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_backend_5finterfaces_2fprotobuf_2fpb_2frsa_2eproto__INCLUDED */
